<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/composeApp/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/composeApp/build.gradle.kts" />
              <option name="originalContent" value="import org.jetbrains.compose.desktop.application.dsl.TargetFormat&#10;import org.jetbrains.kotlin.gradle.dsl.JvmTarget&#10;&#10;plugins {&#10;    alias(libs.plugins.kotlinMultiplatform)&#10;    alias(libs.plugins.androidApplication)&#10;    alias(libs.plugins.composeMultiplatform)&#10;    alias(libs.plugins.composeCompiler)&#10;}&#10;&#10;kotlin {&#10;    androidTarget {&#10;        compilerOptions {&#10;            jvmTarget.set(JvmTarget.JVM_11)&#10;        }&#10;    }&#10;&#10;    listOf(&#10;        iosArm64(),&#10;        iosSimulatorArm64()&#10;    ).forEach { iosTarget -&gt;&#10;        iosTarget.binaries.framework {&#10;            baseName = &quot;ComposeApp&quot;&#10;            isStatic = true&#10;        }&#10;    }&#10;&#10;    sourceSets {&#10;        androidMain.dependencies {&#10;            implementation(compose.preview)&#10;            implementation(libs.androidx.activity.compose)&#10;            // WebView-based map needs no native Map SDK dependency&#10;        }&#10;        commonMain.dependencies {&#10;            implementation(compose.runtime)&#10;            implementation(compose.foundation)&#10;            implementation(compose.material3)&#10;            implementation(compose.materialIconsExtended)&#10;            implementation(compose.ui)&#10;            implementation(compose.components.resources)&#10;            implementation(compose.components.uiToolingPreview)&#10;            implementation(libs.androidx.lifecycle.viewmodelCompose)&#10;            implementation(libs.androidx.lifecycle.runtimeCompose)&#10;            implementation(project.dependencies.platform(&quot;io.github.jan-tennert.supabase:bom:VERSION&quot;))&#10;            implementation(&quot;io.github.jan-tennert.supabase:postgrest-kt&quot;)&#10;            implementation(&quot;io.github.jan-tennert.supabase:auth-kt&quot;)&#10;            implementation(&quot;io.github.jan-tennert.supabase:realtime-kt&quot;)&#10;            implementation(&quot;io.ktor:ktor-client-[engine]:KTOR_VERSION&quot;)&#10;        }&#10;        commonTest.dependencies {&#10;            implementation(libs.kotlin.test)&#10;        }&#10;    }&#10;}&#10;&#10;android {&#10;    namespace = &quot;compose.project.click.click&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;compose.project.click.click&quot;&#10;        minSdk = libs.versions.android.minSdk.get().toInt()&#10;        targetSdk = libs.versions.android.targetSdk.get().toInt()&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;        // MapLibre doesn't require an API key&#10;    }&#10;    packaging {&#10;        resources {&#10;            excludes += &quot;/META-INF/{AL2.0,LGPL2.1}&quot;&#10;        }&#10;    }&#10;    buildTypes {&#10;        getByName(&quot;release&quot;) {&#10;            isMinifyEnabled = false&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;}&#10;&#10;dependencies {&#10;    debugImplementation(compose.uiTooling)&#10;}&#10;" />
              <option name="updatedContent" value="import org.jetbrains.compose.desktop.application.dsl.TargetFormat&#10;import org.jetbrains.kotlin.gradle.dsl.JvmTarget&#10;&#10;plugins {&#10;    alias(libs.plugins.kotlinMultiplatform)&#10;    alias(libs.plugins.androidApplication)&#10;    alias(libs.plugins.composeMultiplatform)&#10;    alias(libs.plugins.composeCompiler)&#10;}&#10;&#10;kotlin {&#10;    androidTarget {&#10;        compilerOptions {&#10;            jvmTarget.set(JvmTarget.JVM_11)&#10;        }&#10;    }&#10;&#10;    listOf(&#10;        iosArm64(),&#10;        iosSimulatorArm64()&#10;    ).forEach { iosTarget -&gt;&#10;        iosTarget.binaries.framework {&#10;            baseName = &quot;ComposeApp&quot;&#10;            isStatic = true&#10;        }&#10;    }&#10;&#10;    sourceSets {&#10;        androidMain.dependencies {&#10;            implementation(compose.preview)&#10;            implementation(libs.androidx.activity.compose)&#10;            // WebView-based map needs no native Map SDK dependency&#10;            &#10;            // Ktor Android engine&#10;            implementation(&quot;io.ktor:ktor-client-android:3.0.1&quot;)&#10;        }&#10;        commonMain.dependencies {&#10;            implementation(compose.runtime)&#10;            implementation(compose.foundation)&#10;            implementation(compose.material3)&#10;            implementation(compose.materialIconsExtended)&#10;            implementation(compose.ui)&#10;            implementation(compose.components.resources)&#10;            implementation(compose.components.uiToolingPreview)&#10;            implementation(libs.androidx.lifecycle.viewmodelCompose)&#10;            implementation(libs.androidx.lifecycle.runtimeCompose)&#10;            &#10;            // Supabase dependencies&#10;            implementation(project.dependencies.platform(&quot;io.github.jan-tennert.supabase:bom:3.0.2&quot;))&#10;            implementation(&quot;io.github.jan-tennert.supabase:postgrest-kt&quot;)&#10;            implementation(&quot;io.github.jan-tennert.supabase:auth-kt&quot;)&#10;            implementation(&quot;io.github.jan-tennert.supabase:realtime-kt&quot;)&#10;            &#10;            // Ktor client dependencies&#10;            implementation(&quot;io.ktor:ktor-client-core:3.0.1&quot;)&#10;            implementation(&quot;io.ktor:ktor-client-content-negotiation:3.0.1&quot;)&#10;            implementation(&quot;io.ktor:ktor-serialization-kotlinx-json:3.0.1&quot;)&#10;        }&#10;        iosMain.dependencies {&#10;            // Ktor iOS engine&#10;            implementation(&quot;io.ktor:ktor-client-darwin:3.0.1&quot;)&#10;        }&#10;        commonTest.dependencies {&#10;            implementation(libs.kotlin.test)&#10;        }&#10;    }&#10;}&#10;&#10;android {&#10;    namespace = &quot;compose.project.click.click&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;compose.project.click.click&quot;&#10;        minSdk = libs.versions.android.minSdk.get().toInt()&#10;        targetSdk = libs.versions.android.targetSdk.get().toInt()&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;        // MapLibre doesn't require an API key&#10;    }&#10;    packaging {&#10;        resources {&#10;            excludes += &quot;/META-INF/{AL2.0,LGPL2.1}&quot;&#10;        }&#10;    }&#10;    buildTypes {&#10;        getByName(&quot;release&quot;) {&#10;            isMinifyEnabled = false&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;}&#10;&#10;dependencies {&#10;    debugImplementation(compose.uiTooling)&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/composeApp/local.properties">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/composeApp/local.properties" />
              <option name="originalContent" value="## This file must *NOT* be checked into Version Control Systems,&#10;# as it contains information specific to your local configuration.&#10;#&#10;# Location of the SDK. This is only used by Gradle.&#10;# For customization when using a Version Control System, please read the&#10;# header note.&#10;#Wed Oct 22 10:29:30 PDT 2025&#10;sdk.dir=/home/matthew/Android/Sdk&#10;" />
              <option name="updatedContent" value="## This file must *NOT* be checked into Version Control Systems,&#10;# as it contains information specific to your local configuration.&#10;#&#10;# Location of the SDK. This is only used by Gradle.&#10;# For customization when using a Version Control System, please read the&#10;# header note.&#10;#Wed Oct 22 10:29:30 PDT 2025&#10;sdk.dir=/Users/timberlake2025/Library/Android/sdk&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/local.properties">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/local.properties" />
              <option name="originalContent" value="## This file must *NOT* be checked into Version Control Systems,&#10;# as it contains information specific to your local configuration.&#10;#&#10;# Location of the SDK. This is only used by Gradle.&#10;# For customization when using a Version Control System, please read the&#10;# header note.&#10;#Tue Oct 28 17:02:56 PDT 2025&#10;sdk.dir=/home/matthew/Android/Sdk&#10;" />
              <option name="updatedContent" value="## This file must *NOT* be checked into Version Control Systems,&#10;# as it contains information specific to your local configuration.&#10;#&#10;# Location of the SDK. This is only used by Gradle.&#10;# For customization when using a Version Control System, please read the&#10;# header note.&#10;#Tue Oct 28 17:02:56 PDT 2025&#10;sdk.dir=/Users/timberlake2025/Library/Android/sdk&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>